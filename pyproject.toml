[build-system]
requires = [
    "setuptools >= 40.8.0",
    "wheel >= 0.29.0",
]
build-backend = 'setuptools.build_meta'

[project]
name = "pulp-container"
version = "2.23.0"
description = "Container plugin for the Pulp Project"
readme = "README.md"
authors = [
  {name="Pulp Team", email="pulp-list@redhat.com"},
]
classifiers=[
  "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
  "Operating System :: POSIX :: Linux",
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]
requires-python = ">=3.9"
dependencies = [
  "jsonschema>=4.4,<4.24",
  "pulpcore>=3.49.0,<3.85",
  "pyjwt[crypto]>=2.4,<2.11",
]

[project.urls]
Homepage = "https://pulpproject.org"
Documentation = "https://pulpproject.org/pulp_container/"
Repository = "https://github.com/pulp/pulp_container"
"Bug Tracker" = "https://github.com/pulp/pulp_container/issues"
Changelog = "https://pulpproject.org/pulp_container/changes/"

[project.entry-points."pulpcore.plugin"]
pulp_container = "pulp_container:default_app_config"

[tool.setuptools.packages.find]
where = ["."]

[tool.towncrier]
package = "pulp_container"
filename = "CHANGES.md"
directory = "CHANGES/"
title_format = "## {version} ({project_date}) {{: #{version} }}"
template = "CHANGES/.TEMPLATE.md"
issue_format = "[#{issue}](https://github.com/pulp/pulp_container/issues/{issue})"
start_string = "[//]: # (towncrier release notes start)\n"
underlines = ["", "", ""]

[tool.black]
line-length = 100
target-version = ["py36", "py37"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
  | migrations
  | docs
)/
'''

[tool.check-manifest]
ignore = [
    ".gitleaks.toml",
    "CHANGES/**",
    "dev_requirements.txt",
    "doc_requirements.txt",
    "docs/**",
    "staging_docs/**",
    "template_config.yml",
    ".pep8speaks.yml",
    ".ci/**",
    ".github/**",
    "lint_requirements.txt",
    ".flake8",
]

[tool.bumpversion]
# This section is managed by the plugin template. Do not edit manually.

current_version = "2.23.0"
commit = false
tag = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<alpha>0a)?(?P<patch>\\d+)(\\.(?P<release>[a-z]+))?"
serialize = [
  "{major}.{minor}.{patch}.{release}",
  "{major}.{minor}.{patch}",
  "{major}.{minor}.{alpha}{patch}.{release}",
  "{major}.{minor}.{alpha}{patch}",
]

[tool.bumpversion.parts.alpha]
# This section is managed by the plugin template. Do not edit manually.

# This is sort of a hack. In PEP440 prerelease markers work quite differently.
# But this fits best with the way we have been doing release versions.
optional_value = "final"
values = [
  "0a",
  "final",
]
independent = true

[tool.bumpversion.parts.release]
# This section is managed by the plugin template. Do not edit manually.

optional_value = "prod"
values = [
  "dev",
  "prod",
]

[[tool.bumpversion.files]]
# This section is managed by the plugin template. Do not edit manually.

filename = "./pulp_container/app/__init__.py"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
# This section is managed by the plugin template. Do not edit manually.

filename = "./pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""