{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/docker/blobs/": {"get": {"operationId": "content_docker_blobs_list", "summary": "List blobs", "description": "ViewSet for Blobs.", "parameters": [{"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Blob"}}}}}}, "tags": ["content: blobs"]}, "parameters": []}, "{blob_href}": {"get": {"operationId": "content_docker_blobs_read", "summary": "Inspect a blob", "description": "ViewSet for Blobs.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Blob"}}}, "tags": ["content: blobs"]}, "parameters": [{"name": "blob_href", "in": "path", "description": "URI of Blob. e.g.: /pulp/api/v3/content/docker/blobs/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifests/": {"get": {"operationId": "content_docker_manifests_list", "summary": "List manifests", "description": "ViewSet for Manifest.", "parameters": [{"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Manifest"}}}}}}, "tags": ["content: manifests"]}, "parameters": []}, "{manifest_href}": {"get": {"operationId": "content_docker_manifests_read", "summary": "Inspect a manifest", "description": "ViewSet for Manifest.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Manifest"}}}, "tags": ["content: manifests"]}, "parameters": [{"name": "manifest_href", "in": "path", "description": "URI of Manifest. e.g.: /pulp/api/v3/content/docker/manifests/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/tags/": {"get": {"operationId": "content_docker_tags_list", "summary": "List tags", "description": "ViewSet for Tag.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}}}, "tags": ["content: tags"]}, "parameters": []}, "{tag_href}": {"get": {"operationId": "content_docker_tags_read", "summary": "Inspect a tag", "description": "ViewSet for Tag.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["content: tags"]}, "parameters": [{"name": "tag_href", "in": "path", "description": "URI of Tag. e.g.: /pulp/api/v3/content/docker/tags/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/docker/docker/": {"get": {"operationId": "distributions_docker_docker_list", "summary": "List docker distributions", "description": "The Docker Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Docker Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Docker\nDistribution, but not both.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerDistribution"}}}}}}, "tags": ["distributions: docker"]}, "post": {"operationId": "distributions_docker_docker_create", "summary": "Create a docker distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "parameters": []}, "{docker_distribution_href}": {"get": {"operationId": "distributions_docker_docker_read", "summary": "Inspect a docker distribution", "description": "The Docker Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Docker Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Docker\nDistribution, but not both.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerDistribution"}}}, "tags": ["distributions: docker"]}, "put": {"operationId": "distributions_docker_docker_update", "summary": "Update a docker distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "patch": {"operationId": "distributions_docker_docker_partial_update", "summary": "Partially update a docker distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "delete": {"operationId": "distributions_docker_docker_delete", "summary": "Delete a docker distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "parameters": [{"name": "docker_distribution_href", "in": "path", "description": "URI of Docker Distribution. e.g.: /pulp/api/v3/distributions/docker/docker/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/docker/": {"get": {"operationId": "docker_list", "summary": "List docker repositorys", "description": "ViewSet for docker repo.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerRepository"}}}}}}, "tags": ["docker"]}, "post": {"operationId": "docker_create", "summary": "Create a docker repository", "description": "ViewSet for docker repo.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DockerRepository"}}}, "tags": ["docker"]}, "parameters": []}, "/pulp/api/v3/docker/manifests/copy/": {"post": {"operationId": "docker_manifests_copy_create", "description": "Trigger an asynchronous task to copy manifests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManifestCopy"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: copy"]}, "parameters": []}, "/pulp/api/v3/docker/recursive-add/": {"post": {"operationId": "docker_recursive-add_create", "description": "Trigger an asynchronous task to recursively add docker content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: recursive-add"]}, "parameters": []}, "/pulp/api/v3/docker/recursive-remove/": {"post": {"operationId": "docker_recursive-remove_create", "description": "Trigger an asynchronous task to recursively remove docker content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: recursive-remove"]}, "parameters": []}, "/pulp/api/v3/docker/tag/": {"post": {"operationId": "docker_tag_create", "description": "Trigger an asynchronous task to create a new repository", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagImage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: tag"]}, "parameters": []}, "/pulp/api/v3/docker/tags/copy/": {"post": {"operationId": "docker_tags_copy_create", "description": "Trigger an asynchronous task to copy tags", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagCopy"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: copy"]}, "parameters": []}, "/pulp/api/v3/docker/untag/": {"post": {"operationId": "docker_untag_create", "description": "Trigger an asynchronous task to create a new repository", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UnTagImage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: untag"]}, "parameters": []}, "{docker_repository_href}": {"get": {"operationId": "docker_read", "summary": "Inspect a docker repository", "description": "ViewSet for docker repo.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerRepository"}}}, "tags": ["docker"]}, "put": {"operationId": "docker_update", "summary": "Update a docker repository", "description": "Trigger an asynchronous task to updatea repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker"]}, "patch": {"operationId": "docker_partial_update", "summary": "Partially update a docker repository", "description": "ViewSet for docker repo.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerRepository"}}}, "tags": ["docker"]}, "delete": {"operationId": "docker_delete", "summary": "Delete a docker repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker"]}, "parameters": [{"name": "docker_repository_href", "in": "path", "description": "URI of Docker Repository. e.g.: /pulp/api/v3/docker/1/", "required": true, "type": "string"}]}, "{docker_repository_href}sync/": {"post": {"operationId": "docker_sync", "description": "Trigger an asynchronous task to sync content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker"]}, "parameters": [{"name": "docker_repository_href", "in": "path", "description": "URI of Docker Repository. e.g.: /pulp/api/v3/docker/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/docker/docker/": {"get": {"operationId": "remotes_docker_docker_list", "summary": "List docker remotes", "description": "Docker remotes represent an external repository that implements the Docker\nRegistry API. Docker remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerRemote"}}}}}}, "tags": ["remotes: docker"]}, "post": {"operationId": "remotes_docker_docker_create", "summary": "Create a docker remote", "description": "Docker remotes represent an external repository that implements the Docker\nRegistry API. Docker remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes: docker"]}, "parameters": []}, "{docker_remote_href}": {"get": {"operationId": "remotes_docker_docker_read", "summary": "Inspect a docker remote", "description": "Docker remotes represent an external repository that implements the Docker\nRegistry API. Docker remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes: docker"]}, "put": {"operationId": "remotes_docker_docker_update", "summary": "Update a docker remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "patch": {"operationId": "remotes_docker_docker_partial_update", "summary": "Partially update a docker remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "delete": {"operationId": "remotes_docker_docker_delete", "summary": "Delete a docker remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "parameters": [{"name": "docker_remote_href", "in": "path", "description": "URI of Docker Remote. e.g.: /pulp/api/v3/remotes/docker/docker/1/", "required": true, "type": "string"}]}}, "definitions": {"Blob": {"required": ["artifact", "relative_path", "digest", "media_type"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Blob file", "type": "string", "minLength": 1}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}}}, "Manifest": {"required": ["artifact", "relative_path", "digest", "schema_version", "media_type", "listed_manifests", "config_blob", "blobs"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}, "schema_version": {"title": "Schema version", "description": "Docker schema version", "type": "integer"}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}, "listed_manifests": {"description": "Manifests that are referenced by this Manifest List", "type": "array", "items": {"description": "Manifests that are referenced by this Manifest List", "type": "string", "format": "uri"}, "uniqueItems": true}, "config_blob": {"title": "Config blob", "description": "Blob that contains configuration for this Manifest", "type": "string", "format": "uri"}, "blobs": {"description": "Blobs that are referenced by this Manifest", "type": "array", "items": {"description": "Blobs that are referenced by this Manifest", "type": "string", "format": "uri"}, "uniqueItems": true}}}, "Tag": {"required": ["artifact", "relative_path", "name", "tagged_manifest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Tag name", "type": "string", "minLength": 1}, "tagged_manifest": {"title": "Tagged manifest", "description": "Manifest that is tagged", "type": "string", "format": "uri"}}}, "DockerDistribution": {"required": ["name", "base_path"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "registry_path": {"title": "Registry path", "description": "The Registry hostame:port/name/ to use with docker pull command defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "DockerRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "plugin_managed": {"title": "Plugin managed", "description": "True if the plugin manages this repository, users typically do not interact with it.", "type": "boolean", "readOnly": true}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "ManifestCopy": {"required": ["destination_repository"], "type": "object", "properties": {"source_repository": {"title": "Repository", "description": "A URI of the repository to copy content from.", "type": "string", "format": "uri"}, "source_repository_version": {"title": "Source repository version", "description": "A URI of the repository version to copy content from.", "type": "string", "format": "uri"}, "destination_repository": {"title": "Repository", "description": "A URI of the repository to copy content to.", "type": "string", "format": "uri"}, "digests": {"description": "A list of manifest digests to copy.", "type": "array", "items": {"type": "string"}}, "media_types": {"description": "A list of media_types to copy.", "type": "array", "items": {"type": "string", "enum": ["application/vnd.docker.distribution.manifest.v1+json", "application/vnd.docker.distribution.manifest.v2+json", "application/vnd.docker.distribution.manifest.list.v2+json"]}}}}, "RecursiveManage": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to add content.", "type": "string", "format": "uri"}, "content_units": {"description": "A list of content units to operate on.", "type": "array", "items": {"type": "string"}}}}, "TagImage": {"required": ["repository", "tag", "digest"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository.", "type": "string", "format": "uri"}, "tag": {"title": "Tag", "description": "A tag name", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}}}, "TagCopy": {"required": ["destination_repository"], "type": "object", "properties": {"source_repository": {"title": "Repository", "description": "A URI of the repository to copy content from.", "type": "string", "format": "uri"}, "source_repository_version": {"title": "Source repository version", "description": "A URI of the repository version to copy content from.", "type": "string", "format": "uri"}, "destination_repository": {"title": "Repository", "description": "A URI of the repository to copy content to.", "type": "string", "format": "uri"}, "names": {"description": "A list of tag names to copy.", "type": "array", "items": {"type": "string"}}}}, "UnTagImage": {"required": ["repository", "tag"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository.", "type": "string", "format": "uri"}, "tag": {"title": "Tag", "description": "A tag name", "type": "string", "minLength": 1}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "DockerRemote": {"required": ["name", "url", "upstream_name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        ", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "upstream_name": {"title": "Upstream name", "description": "Name of the upstream repository", "type": "string", "minLength": 1}, "whitelist_tags": {"description": "A list of whitelisted tags to sync", "type": "array", "items": {"type": "string", "maxLength": 255, "minLength": 1}, "x-nullable": true}}}}, "tags": [{"name": "content: blobs", "x-displayName": "Content: Blobs"}, {"name": "content: manifests", "x-displayName": "Content: Manifests"}, {"name": "content: tags", "x-displayName": "Content: Tags"}, {"name": "distributions: docker", "x-displayName": "Distributions: Docker"}, {"name": "docker", "x-displayName": "Docker"}, {"name": "docker: copy", "x-displayName": "Docker: Copy"}, {"name": "docker: recursive-add", "x-displayName": "Docker: Recursive-Add"}, {"name": "docker: recursive-remove", "x-displayName": "Docker: Recursive-Remove"}, {"name": "docker: tag", "x-displayName": "Docker: Tag"}, {"name": "docker: untag", "x-displayName": "Docker: Untag"}, {"name": "remotes: docker", "x-displayName": "Remotes: Docker"}]}